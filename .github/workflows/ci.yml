name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout tests repo
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install test dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npm run install:browsers

    - name: Clone RWA app
      run: |
        git clone https://github.com/cypress-io/cypress-realworld-app .rwa
        cd .rwa
        corepack enable || true
        yarn install --frozen-lockfile

    - name: Start RWA app (frontend + backend) and wait both ports
      run: |
        cd .rwa
        yarn dev &> /tmp/rwa.log &
        npx wait-on http-get://localhost:3000 http-get://localhost:3001 --timeout 120000

    - name: Check that services respond (debug)
      run: |
        echo "Front (3000):"
        curl -sI http://localhost:3000 || true
        echo "API (3001):"
        curl -sI http://localhost:3001 || true
        tail -n 50 /tmp/rwa.log || true

    - name: Set environment variables (increase expect timeout)
      run: |
        echo "BASE_URL=http://localhost:3000" >> $GITHUB_ENV
        echo "API_URL=http://localhost:3001" >> $GITHUB_ENV
        echo "PW_TIMEOUT=60000" >> $GITHUB_ENV
        echo "PW_EXPECT_TIMEOUT=20000" >> $GITHUB_ENV

    - name: Run Smoke tests
      run: npm run test:smoke
      env:
        BASE_URL: http://localhost:3000
        API_URL: http://localhost:3001
        PW_TIMEOUT: 60000
        PW_EXPECT_TIMEOUT: 20000

    - name: Run API tests
      run: npm run test:api
      env:
        BASE_URL: http://localhost:3000
        API_URL: http://localhost:3001
        PW_TIMEOUT: 60000
        PW_EXPECT_TIMEOUT: 20000

    - name: Run UI tests (Playwright)
      run: npm run test:ui
      env:
        BASE_URL: http://localhost:3000
        API_URL: http://localhost:3001
        PW_TIMEOUT: 60000
        PW_EXPECT_TIMEOUT: 20000

    - name: Show reports (debug)
      if: always()
      run: |
        echo "Listing:"
        find . -type d -name 'playwright-report' -maxdepth 5 || true
        ls -la playwright-report || true

    - name: Upload Playwright combined report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: |
          playwright-report/**
          **/playwright-report/**
        retention-days: 30
        if-no-files-found: warn

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/**
          **/test-results/**
        retention-days: 30
        if-no-files-found: warn

  regression:
    name: Regression (PR only)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout tests repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install test dependencies
        run: npm ci

      - name: Install Playwright browsers (chromium only)
        run: npx playwright install chromium --with-deps

      - name: Download & extract RWA artifact (or clone)
        run: |
          git clone https://github.com/cypress-io/cypress-realworld-app .rwa
          cd .rwa
          corepack enable || true
          yarn install --frozen-lockfile

      - name: Start RWA app
        run: |
          cd .rwa
          yarn dev &> /tmp/rwa.log &
          npx wait-on http-get://localhost:3000 --timeout 60000

      - name: Run regression tests
        run: npm run test:ci
        env:
          BASE_URL: http://localhost:3000
          API_URL: http://localhost:3001

  publish-report:
    name: Publish Playwright HTML report (Pages)
    runs-on: ubuntu-latest
    needs: [tests]
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Download playwright-report artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: site

      - name: Prepare site content
        run: |
          echo "Listing site dir:"
          ls -la site || true
          mkdir -p site/_site
          if [ -d "site/playwright-report" ]; then
            mv site/playwright-report/* site/_site/ || true
          else
            mv site/* site/_site/ || true
          fi
          echo "Final site content:"
          ls -la site/_site || true

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: site/_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Show Pages URL
        run: |
          echo "âœ… Report published at:"
          echo "https://${GITHUB_REPOSITORY_OWNER}.github.io/${GITHUB_REPOSITORY}/"
